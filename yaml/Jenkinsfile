// podTemplate(yaml: readTrusted('yaml/pod.yaml')) {
//   node(POD_LABEL) {   
//     stage('Run shell') {
//         sh "echo hello world"
//         sh "pwd && ls -l ./"
//         script {
//             build_tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
//             }
//           }
//     stage('Build Docker image') {
//       container('busybox') {
//         sh "echo hello from $POD_CONTAINER"
//         sh "pwd && ls -l ./"
//         echo "${build_tag}"
//       }
//     }
//   }
// }
// 声明式Pipeline
pipeline {
  agent {
    kubernetes {
      cloud 'kubernetes'
      slaveConnectTimeout 1200
      //inheritFrom 'mypod' // 指定pod 模板, 如果不指定可以通过yamlfile指定文件
      workspaceVolume hostPathWorkspaceVolume(hostPath: "/home/jenkins/agent", readOnly: false)   //持久化
      yamlFile 'yaml/pod.yaml'
    }
  }
  stages {
    stage('Prepare') {
      steps {
        echo "1.Prepare Stage"
        script {
            build_tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
            }
        echo "${build_tag}"
      }
    }
    stage('Test') {
      steps{
        echo "2.Test Stage"
      }
    }
    stage('Build') {
      steps{
        echo "3.Build Docker Image Stage"
        withCredentials([usernamePassword(credentialsId: 'DockerAuth', usernameVariable: 'DockerAuthUser', passwordVariable: 'DockerAuthPassword')]) {
        sh '''
          set +x
          update-ca-certificates
          git branch
          nerdctl login -u ${DockerAuthUser} -p ${DockerAuthPassword}  myregistry.io:8088
        '''
        sh "nerdctl build  -t myregistry.io:8088/library/my-python-demo:${build_tag} ."
        sh "nerdctl push myregistry.io:8088/library/my-python-demo:${build_tag}"
        }
       
      }
      
    }
  }
}